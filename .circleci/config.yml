# Python CircleCI 2.0 configuration file
##
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2
jobs:
  # test:
  build:
    docker:
      - image: ghcr.io/fusion-energy/openmc-dagmc-wrapper:dependencies
    steps:
      - checkout
      - run:
          name: install
          command: |
            python setup.py install

      - run:
          name: run tests Materials()
          command: 
            pytest tests/test_materials.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml

      - run:
          name: run tests MeshTally()
          command: 
            pytest tests/test_tallies/test_mesh_tallies.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml

      - run:
          name: System tests
          command: 
            pytest tests/test_system.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml

      - run:
          name: run test_shape_neutronics
          command: 
            pytest tests/test_shape_neutronics.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml

      - run:
          name: run test_reactor_neutronics
          command: 
            pytest tests/test_reactor_neutronics.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml

      # - run:
      #     name: run test_neutronics_utils
      #     command: 
      #       pytest tests/test_neutronics_utils.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml

      # - run:
      #     name: run test_example_neutronics_simulations
      #     command: 
      #       pytest tests/test_example_neutronics_simulations.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml



      # TODO add example notebooks
      # - run:
      #     name: run notebook_testing
      #     command: 
      #       pytest tests/notebook_testing.py -v --cov=openmc_dagmc_wrapper --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml


      - store_test_results:
          path: test-reports

      - run: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - build
